debug = require('debug')("cobudget-ui:nav:store")
Fluxxor = require('fluxxor')
pathMatch = require('path-match')({})
reverend = require('reverend')

module.exports = Fluxxor.createStore
  
  actions:
    "update": "onUpdate"
    "route": "onRoute"

  initialize: (options) ->
    
    @path = options.path or ""
    @routes = options.routes or {}
    @matches = {}
    @route = null

    for name, route in options.routes or {}
      @matches[name] = pathMatch(route)

    if options.LocationBar
      @LocationBar = options.LocationBar
    else if process.browser
      @LocationBar = require('location-bar')

    if @LocationBar
      @locationBar = new @LocationBar
    else
      @locationBar = null

    @locationBar and @locationBar.onChange(((path) ->
      debug("onChange", path)

      @path = path
      @route = @pathToRoute(path)

      debug("emit change", @path, @route)
      @emit("change")

    ).bind(this))

    @locationBar and @locationBar.start pushState: true

  onUpdate: (path) ->
    debug("onUpdate", path)

    @locationBar and @locationBar.update path, trigger: true

  onRoute: (route) ->
    debug("onRoute", route)

    path = @routeToPath(route)
    console.log(path)
    @onUpdate(path)

  pathToRoute: (path) ->
    debug("pathToRoute", path)

    for name, match of @matches
      params = match(path)
      if (params != false)
        return { name, params }
    return null

  routeToPath: (route) ->
    debug("routeToPath", route)

    { name, params } = route
    console.log(@routes)
    matchPath = @routes[name]

    console.log(matchPath, params)

    return reverend(matchPath, params)
