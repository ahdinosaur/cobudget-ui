expect = require('test').expect
Promise = require('bluebird')
sinon = require('sinon')

Store = require('../store.coffee')

describe "NavStore", ->
  LocationBar = undefined
  store = undefined

  beforeEach ->
    LocationBar = class
      onChange: sinon.stub()
      onUpdate: sinon.stub()
      start: sinon.stub()
    store = new Store({ LocationBar })

  it "should call start", () ->
    start = store.locationBar.start
    expect(start.callCount).to.equal(1)
    expect(start.getCall(0).args)
      .to.deep.equal([{ pushState: true }])

  it "should set path from initialize", () ->
    if (process.browser)
      path = window.location.pathname.substring(1) + window.location.search
      store = new Store()
    else
      path = "people"
      store = new Store({ path: path })
    expect(store.path).to.equal(path)

  it "should change onChange", (done) ->
    path = "budgets"
    onChange = store.locationBar.onChange
    expect(onChange.callCount).to.equal(1)
    expect(store.path).to.be.undefined
    store.on 'change', ->
      expect(store.path).to.equal(path)
      done()
    onChange.firstCall.args[0](path)
